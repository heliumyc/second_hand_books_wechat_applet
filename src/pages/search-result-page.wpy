<template>
  <view>
    <!-- 输入区 -->
    <searchBar class="search-area"
      @searchEvent.user="handleSearch"
      :query.sync="query">
      <!-- 这个地方不需要双向同步, 所以就没有, 算是premature optm吧, 罪过罪过 -->
    </searchBar>
    <!-- 提示 -->
    <i-toast id="toast"></i-toast>
    <view wx:if="{{ spinShow }}" style="z-index: 1000" class="fixed-middle">
      <i-spin size="large"></i-spin>
    </view>
    <!-- 内容显示区 -->
    <searchResultPanel class="result-panel"
      @touchmove.user="handleTouchMove"
      @touchstart.user="handleTouchStart"
      @touchend.user="handleTouchEnd"
      :hits.sync="hits">
    </searchResultPanel>
    <!-- 触底后上划的提示 -->
    <view wx:if="{{loadShow}}" class="load-bar">
      <text>上拉加载更多 -v- </text>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import SearchBar from '../components/search-bar'
  import SearchResultPanel from '../components/search-result-panel'
  const { $Toast } = require('../static/iview/base/index')
  const bookTemplate = {title: 'Text Book 1', isbn: 'abcd3598jife', price: '15', contact: 'qq:1234567', note: 'hello!!!!!!', favorite: false, userId: "001"}

  export default class SearchResultPage extends wepy.page {
    config = {
      navigationBarTitleText: '搜索结果',
      usingComponents: {
        'i-icon': '../static/iview/icon/index',
        'i-toast': '../static/iview/toast/index',
        'i-spin': '../static/iview/spin/index',
        'i-card': '../static/iview/card/index'
      },
      enablePullDownRefresh: true,
    }

    components = {
      searchBar: SearchBar,
      searchResultPanel: SearchResultPanel
    }

    data = {
      query: 'test', // should be empty but will be removed later
      page: 1, // 当前的页数
      pageSize: 10, // 已经一次加载的数量
      totalHitsNum: 0, // 总共可以返回的数量, 目前后端没有返回这个值是因为前面没有地方可以展示了, so just let it go
      hits: [],  // 已经加载的hits, 每次加载都extend

      spinShow: false, // 内容加载提示
      loadShow: false, // 上划加载提示
      moveDist: 0, // 移动的距离, 正负表示方向
      startY: 0, // y坐标标记
      canDrag: false, // 是否触发刷新, 和是否触底有关
      maxDist: 30 // 触底后上拉多少触发刷新
    }

    methods = {
      onReachBottom() {
        // 滑动触底之后触发, 原生API
        this.canDrag = true
        console.log(this.canDrag)
      },

      handleTouchMove(ev) {
        let nowY = ev.changedTouches[0].clientY // 此时的Y坐标
        console.log(this.startY, nowY)
        this.moveDist = nowY-this.startY // 移动的距离, 正负表示上下
        if(this.moveDist > 0) {
          // 说明往下划
          this.canDrag = false // 上划之后必定不会触底
          this.$apply()
        }
        else if(this.canDrag) {
          // 说明往上划, 而且还触底了
          // 下面加一个提示
          this.loadShow = true // 显示上划加载提示
          this.$apply() // 更新DOM
        }
      },

      handleTouchStart(ev) {
        // 滑动开始处理函数
        this.startY = ev.changedTouches[0].clientY // 记录开始滑动的Y坐标
      },

      async handleTouchEnd() {
        // 滑动结束处理函数
        this.loadShow = false // 关闭上划加载提示
        this.$apply() // 更新DOM
        // TODO 判断是否还有数据可以加载
        if(this.moveDist <= -this.maxDist && this.canDrag) {
          // 如果滑动距离超过阈值并且触底
          this.canDrag = false
          this.$apply() // 防止重复查询, 数据重复
          this.page = this.page + 1
          await this.searchRequest(this.query, this.page, this.pageSize)
        }
      },

      async handleSearch(query) {
        this.clearData()
        await this.searchRequest(query)
      }
    }

    async onLoad(option) {
      // 当页面开始加载触发函数, 注意wx的规则是先渲染DOM然后触发onload
      console.log(option)
      this.query = option.query
      await this.searchRequest(this.query)
      console.log('done!')
    }

    async onPullDownRefresh() {
      // 一旦划到顶后触发函数, wx原生API
      wepy.showNavigationBarLoading() // 导航栏会有个小圈圈跟着转
      this.clearData()
      wepy.stopPullDownRefresh() // 必须调用停止刷新才能让三个刷新小点点消失
      await this.searchRequest(this.query)
      wepy.hideNavigationBarLoading() // 导航栏小圈圈停止转动
    }

    async searchRequest(query, page=1, pageSize=this.pageSize) {
      // 搜索, 向后台的RESTful api请求数据
      if (query === '') {
        this.showWarningToast('ooooooops, 检索式不能为空')
        return
      }

      this.showLoadingToast()

      try {
        let res = await wepy.request({
          url: 'https://wxmini.heliumyc.top/api/books',
          data: {
            query: query,
            page: page,
            page_size: pageSize
          }
        })
        console.log(res.data)
        let body = res.data
        if (body.code === 0) {
          this.hits.unshift.apply(this.hits, body.data.books)
          console.log(this.hits)
          this.$apply()
        } else {
          console.log('err?')
          this.showWarningToast('请求错误')
        }
      } catch (e) {
        this.showWarningToast('请求超时')
        console.log(e)
      }

      // mock data
      // let result = {
      //   totalHitsNum: 50,
      //   pageNum: 10,
      //   hits: Array.from(new Array(10), (val,index)=>bookTemplate)
      // }
      // await this.sleep(1)
      // console.log(result)
      // this.hits.unshift.apply(this.hits, result.hits)
      // console.log(this.hits)
      // this.$apply()

      // 更新数据


      this.hideLoadingToast()
    }

    sleep(second) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve()
        }, second*1000)
      })
    }

    showWarningToast(warningMsg) {
      $Toast({
        content: warningMsg,
        type: 'warning'
      })
    }

    showLoadingToast() {
      // 显示加载中的轻提示
      // $Toast({
      //   content: '元气满满地加载中',
      //   type: 'loading',
      //   duration: 0
      // })
      this.spinShow = true
      this.$apply()
    }

    hideLoadingToast() {
      // 隐藏轻提示
      // $Toast.hide()
      this.spinShow = false
      this.$apply()
    }

    clearData() {
      // 清除结果
      this.hits = []
      this.page = 1
      this.pageSize = 10
    }
  }
</script>

<style lang="less">
  @search-bar-height: 110rpx;
  @panel-top-margin: 30rpx;

  .search-area {
    position: fixed;
    top: 0;
    left: 0;
    height: @search-bar-height;
    width: 100%;
    background-color: #2d8cf0;
    display: flex;
    justify-content: space-between;
    z-index: 10;
  }

  .result-panel {
    margin-top: @search-bar-height + @panel-top-margin;
  }

  .load-bar {
    height: 100rpx;
    background-color: #f8f8f9;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #a6a7a8;
    letter-spacing: 1pt;
    font-size: 13pt;
  }

  // 加载提示
  .fixed-middle {
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    top: 50%;
    display: flex;
    justify-content: center;
  }
</style>
